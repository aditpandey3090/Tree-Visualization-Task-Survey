[
  {
    "PaperId": 2,
    "Task Description": "At level 2 which is larger: ``Cabinet Agencies'' or ``Miscellaneous Agencies?''",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 2,
    "Task Description": "Do the names of all of the level 3 items under ``Cabinet Agencies'' start with the word ``Department''?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 2,
    "Task Description": "What is the name of the largest Department (level 3) under ``Cabinet Agencies?''",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 2,
    "Task Description": "What is the value of ``Health Care Financing Administration'' (level 4) under ``Department of Health?''",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 2,
    "Task Description": "What is the name of the largest level 4 item under ``Department of Defense_Military?''",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 2,
    "Task Description": "What is the name of the largest level 4 item in the entire\n``1992 US Budget?''",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 2,
    "Task Description": "What is the value of ``Department of Treasury'' (level 3)?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 2,
    "Task Description": "Is ``Interest on the Public Debt'' more than half of the\n``Department of Treasury?''",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 2,
    "Task Description": "Name the 7 level 4 items exceeding 50,000 in order of \ndecreasing value?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Browse",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 3,
    "Task Description": "Binary or n-ary tree?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Summarize",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 3,
    "Task Description": "Balanced or unbalanced tree?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Balance",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 3,
    "Task Description": "Deepest common ancestor?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Common Ancestor"
  },
  {
    "PaperId": 3,
    "Task Description": "Number of levels?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Height",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 3,
    "Task Description": "Three largest leaves?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 4,
    "Task Description": "What is the maximum depth of the eBay hierarchy?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Height",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 4,
    "Task Description": "Is the tree balanced or unbalanced?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Balance",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 4,
    "Task Description": "Find the name of the parent directory of the directory \"BMW\".",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 4,
    "Task Description": "Which directory has the greatest number of immediate subdirectories?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 4,
    "Task Description": "Which bottom-level directory of the eBay item hierarchy has the largest number of files?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 4,
    "Task Description": "Find the directory that contains the most .png type files.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 4,
    "Task Description": "Which directory includes a deeper hierarchy: \"Flutes\" or \"Guitars\"?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Height",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 4,
    "Task Description": "Find the two duplicate occurrences of the directory \"1869\". Indicate their pathnames.",
    "Complex": "*",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 4,
    "Task Description": "Find a file of type .css and write down its name.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 4,
    "Task Description": "What is the name of the largest file in the eBay items hierarchy?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 4,
    "Task Description": "Find the number of directories WITHOUT a file of type .js.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 8,
    "Task Description": "Identify the largest and second largest leaf.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 8,
    "Task Description": "Identify the largest node.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 8,
    "Task Description": "Locate a leaf, given its entire path and name.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 8,
    "Task Description": "Identify a node containing a specific type of leaf nodes.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 8,
    "Task Description": "Compare two leaf nodes by size and identify the larger.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 8,
    "Task Description": "Locate two duplicated nodes  containing the same leaves",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 8,
    "Task Description": "Compare two nodes by size and identify the larger",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 8,
    "Task Description": "Compare two nodes and find the node with highest leaves.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 9,
    "Task Description": "Find the least common ancestor",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Common Ancestor"
  },
  {
    "PaperId": 10,
    "Task Description": "Overview Large Trees with Multiple Foci*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 11,
    "Task Description": "Node searches (e.g. find kangaroo, find planaria)",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 11,
    "Task Description": "Search of previously visited nodes",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Memory"
  },
  {
    "PaperId": 11,
    "Task Description": "Listing all the ancestors of a node",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 11,
    "Task Description": "Find 3 nodes that have more than 10 direct descendants",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Browse",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 11,
    "Task Description": "Which of the 3 branches of `measurements' contains a larger number of nodes",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 12,
    "Task Description": "Follow Path: New Zealand to Canterbury to Christchurch to Sumner",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 13,
    "Task Description": "Identify similar nodes based on their name (Folder names are similar)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 13,
    "Task Description": "Identify similar subtrees based on their size (number of files and subdirectories are the same)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 13,
    "Task Description": "Identify similar subtrees based on the constituent file/folder content/type (one folder contains many mp3 files)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 13,
    "Task Description": "Compare of nodes based on their size (Comparison of file and directory size)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 14,
    "Task Description": "Count all leaf nodes of the hierarchy",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 14,
    "Task Description": "Count all nodes of the hierarchy",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 14,
    "Task Description": "Compare the combined area of two pairs of nodes within one level of the hierarchy",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 14,
    "Task Description": "Compare the combined area of two pairs of nodes across different levels of the hierarchy",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 15,
    "Task Description": "Find the deepest subdirectory inside the directory “pad++” (/hcil/pad++)",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Depth",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 15,
    "Task Description": "Find the directory inside “ndl” (/hcil/ndl) with the most direct subdirectories",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 15,
    "Task Description": "Find the directory “yidemo” (/hcil/lifelines/yidemo)",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 15,
    "Task Description": "Find the file /hcil/treemaps/treemap2000/images/banner-logo-large.gif",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 15,
    "Task Description": "Count the number of subdirectories directly inside the directory “/hcil/pubs”",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 15,
    "Task Description": "Count the number of files directly inside the directory “/hcil/qp”.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 15,
    "Task Description": "Which directory has more direct subdirectories: “/hcil/about” or “/hcil/eosdis” ?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 15,
    "Task Description": "Which directory has more files directly inside: “/hcil/spotfire” or “/hcil/spacetree” ?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 16,
    "Task Description": "Users had to select the three largest leaf nodes.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 16,
    "Task Description": "Users had to indicate level of a predetermined node.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Depth",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 16,
    "Task Description": "Users had to indicate the total number of levels in the tree.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Height",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 16,
    "Task Description": "Users indicated the deepest common ancestor of two predetermined nodes.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Common Ancestor"
  },
  {
    "PaperId": 16,
    "Task Description": "Users were asked to identify the position of two memorized nodes.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Memory"
  },
  {
    "PaperId": 22,
    "Task Description": "Locate the largest file",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 22,
    "Task Description": "Locate the largest file of a certain type",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 22,
    "Task Description": "Locate the directory furthest down in the hierarchy structure",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Depth",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 22,
    "Task Description": "Locate a file with a certain path",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 22,
    "Task Description": "Determine which of two given directories contain the most file including subdirectories?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 22,
    "Task Description": "Determine which of two given directories is the largest?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 22,
    "Task Description": "Name the most common file type?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 22,
    "Task Description": "Identify a node: Determine in which directory I'm pointing the file is located at?*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 22,
    "Task Description": "Locate the largest file in a certain directory?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 22,
    "Task Description": "Locate the largest file of the same type in whole hierarchy?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 27,
    "Task Description": "Identify Adjacency Relations in Hierarchical Data*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Non-Hierarchical"
  },
  {
    "PaperId": 28,
    "Task Description": "Understanding the information depicted in cladograms means, at minimum, understanding the pattern of nesting. For example, are taxa E and taxa F closely related to each other? *",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestor/Descendant",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 29,
    "Task Description": "Find Unknown Node",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 29,
    "Task Description": "Comparison of Subtrees",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 29,
    "Task Description": "Find the Bushiest Child Node",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 29,
    "Task Description": "Find the Largest Subtree",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 29,
    "Task Description": "Find a Deepest Node",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Depth",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 29,
    "Task Description": "Find 3 Nodes with at Least 10 Children",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 29,
    "Task Description": "Return to Previously Visited Node",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Memory"
  },
  {
    "PaperId": 33,
    "Task Description": "Identify distribution of the node value*",
    "Complex": "*",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Distribution",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 34,
    "Task Description": "Visualize hierarchical edge bundling*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Path",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Non-Hierarchical"
  },
  {
    "PaperId": 35,
    "Task Description": "Overview of Node Size: Size of the research center, the number of teams and their relative sizes.*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Summarize",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Patterns",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 35,
    "Task Description": "Clustering Pattern of Leaf Nodes: A simple pattern is a group of 10 people from various teams clustered together mostly without any research interest in common.*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Summarize",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Order",
    "Target Attribute Descriptor": "Patterns",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 35,
    "Task Description": "Contents of Subtrees: Identification of groups of researchers*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 35,
    "Task Description": "Lookup Nodes: Find focused information about specific reserachers*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 35,
    "Task Description": "Annotate a cluster with a label*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Annotate",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 36,
    "Task Description": "Identify if the tree is balanced",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Balance",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 36,
    "Task Description": "Locate a node and observe its neighborhood",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 36,
    "Task Description": "Locate level of a node",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Depth",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 36,
    "Task Description": "Locate level of a node children",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Depth",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 36,
    "Task Description": "Memory of node postion and names",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Memory"
  },
  {
    "PaperId": 37,
    "Task Description": "Hierarchical Relation Between Nodes: Let’s find out how tigers and people are related.*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestor/Descendant",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 37,
    "Task Description": "Hierarchical Relation Between Nodes: Are we on the same branch of the same tree?*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestor/Descendant",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 37,
    "Task Description": "Is this your common ancestor?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Common Ancestor"
  },
  {
    "PaperId": 38,
    "Task Description": "What is the maximum depth of the hierarchy?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Height",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 38,
    "Task Description": "Is the tree balanced or unbalanced?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Balance",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 38,
    "Task Description": "Find the name of the parent directory of the directory “320621”.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 38,
    "Task Description": "Which directory has the greatest number of immediate subdirectories?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 38,
    "Task Description": "Find the total number of bottom-level directories under “teaching”.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 38,
    "Task Description": "Which bottom-level directory of the “teaching” subtree has the largest number of files?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Browse",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 38,
    "Task Description": "Find the directory that contains the most “.avi” type files.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 38,
    "Task Description": "Locate the file “ns_1440_v.dat”.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 38,
    "Task Description": "What is the name of the largest file?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 38,
    "Task Description": "Find the number of directories of depth 3 without a file of type “.pdf”.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Outlier",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 38,
    "Task Description": "Which of the directories includes a deeper hierarchy: “teaching” or “vcgl”?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Height",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 38,
    "Task Description": "Find the two duplicate occurrences of file “RudnickLinsenMcPherson06.avi”. Indicate their path names.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 41,
    "Task Description": "Follow Path: Following navigation instructions to come to a view that is dense enough that crowding begins to become a problem.*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 41,
    "Task Description": "Follow Path: Finding a royal line in the data set provided, which requires the user to re-root the tree and optionally increase the number of generations in order to navigate to the dense areas of the tree and find the royal line.*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Path",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 41,
    "Task Description": "Find Node: Navigate through some 100+ generations to find Adam and Eve.*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 42,
    "Task Description": "First-time node finding",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 42,
    "Task Description": "Visiting previously visited nodes",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Memory"
  },
  {
    "PaperId": 42,
    "Task Description": "Listing all the ancestors of a node",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 43,
    "Task Description": "Positive and negative changes in leaves and interior node values with no changes in topology.*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 44,
    "Task Description": "Exlpore Tree Topology: Have a clear overview of the whole evolution.*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Summarize",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 44,
    "Task Description": "Identify a node and its siblings: Focus on a family or a subfamily while keeping its relationships with other families. *",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Siblings",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 44,
    "Task Description": "Identify a node and its siblings: Focus on a particular period of time across families.*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Siblings",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 44,
    "Task Description": "Compare Two Subtrees: Compare the evolution of two or more families.*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 44,
    "Task Description": "Identify Descendants: Identify a subfamily within a family.*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Descendants",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 52,
    "Task Description": "Identify a node: The lowest ranking remaining in the tournament*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 52,
    "Task Description": "Identify descendants: Which teams a particular team that we selected had beat*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Descendants",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 52,
    "Task Description": "Identify ancestors: Which teams a particular team we selected had lost*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 52,
    "Task Description": "Identify the subtree with max height: Which of the brackets had the highest score, assuming each correct pick was worth a point*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Height",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 54,
    "Task Description": "Identify Adjacency Relations in Hierarchical Data*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Path",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Non-Hierarchical"
  },
  {
    "PaperId": 56,
    "Task Description": "Size of leaves",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 56,
    "Task Description": "Number of leaves",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 56,
    "Task Description": "Visiting path",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 59,
    "Task Description": "Read multidimesional data value",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 62,
    "Task Description": "Node Degree: How many detected pesticides in leafy vegetables in Tianjin city?*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 62,
    "Task Description": "Hierarchical Relation: How many pesticides are there that have association relationships with Carbendazim?*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestor/Descendant",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 62,
    "Task Description": "Node Size: What is the pesticide of the most detected frequency?*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 62,
    "Task Description": "Node Degree: How many agricultural products are there that are detected metalaxyl in leafy vegetables in Tianjin city?*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 62,
    "Task Description": "Node Degree: How many pesticides are there that are detected belong to the category of Organic nitrogen pesticides?*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 64,
    "Task Description": "Identify node (classification label)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 68,
    "Task Description": "Identify ancestors and descendants of a node*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestor/Descendant",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 70,
    "Task Description": "Finding the least common ancestor of two leaf vertices",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Common Ancestor"
  },
  {
    "PaperId": 70,
    "Task Description": "Checking the existence of an identical sub-hierarchy elsewhere in the plot.",
    "Complex": "*",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 70,
    "Task Description": "Estimating which of two sub-hierarchies was the larger one",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 71,
    "Task Description": "Tree Balance: Balance (side of the trunk, side of the main branches)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Balance",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 71,
    "Task Description": "Analyze Nodes in a Subtree: Distribution of values(Position along the main branches)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 71,
    "Task Description": "Identify Outlier Nodes: Outliers in terms of quantity of contacts (size of the small branches)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "Outlier",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 71,
    "Task Description": "Count Leaf Nodes: Number of contacts (number of leaves)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 71,
    "Task Description": "Identify Node Attributes: Qualities of contacts (length and color of the leaves)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 71,
    "Task Description": "Tree Shape Pattern: Trends among interpersonal relationships (tree shapes)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 71,
    "Task Description": "Count Nodes: Quality of a tie (number of fruits)*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 73,
    "Task Description": "Navigate to a specific node",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 73,
    "Task Description": "Compare the size of two nodes",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 73,
    "Task Description": "Identify the closest relationship between Node A and Node B",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestor/Descendant",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 73,
    "Task Description": "What is the least common ancestor of Node A and Node B",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Common Ancestor"
  },
  {
    "PaperId": 75,
    "Task Description": "The task for each student was to locate four individual\nterms embedded within the taxonomy: two terms were from\nlevel three and two from level four.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 77,
    "Task Description": "Identify minimum and maximum value in tree visualizations",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 81,
    "Task Description": "Locate a directory given a path and select a file with a given size (theme: “fruit”).",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 81,
    "Task Description": "Locate and select the smallest file of the type\n\"PDF\".",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 81,
    "Task Description": "Locate and select a file given a path.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Path",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 81,
    "Task Description": "Return to the directory from task 5 with the animal theme.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 81,
    "Task Description": "Select the directory containing the only file of a\ncertain type.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 82,
    "Task Description": "The subjects were instructed to find two directories",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 82,
    "Task Description": "The subjects were instructed to count the number of files in each of the two directories they found in the previous task.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 82,
    "Task Description": "The subjects were instructed to compare the two directories and select the one that contained most descendant",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 83,
    "Task Description": "Identify all individuals of a certain generation (all great-grand parents)",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 83,
    "Task Description": "Identify a specific individual, given the\nrelation pertaining to the central individual",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 83,
    "Task Description": "Identify the children of a given individual",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Descendants",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 83,
    "Task Description": "Identify siblings of a given individual",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Siblings",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 83,
    "Task Description": "Identify a remote descendant (8 generations) given the relevant lineage",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Descendants",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 84,
    "Task Description": "What is the relationship between A1 and A2?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestor/Descendant",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 85,
    "Task Description": "Locating the particular node with\ngiven label name in lower level",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 85,
    "Task Description": "Locating the particular node with given label name in lower level 2 of hierarchal dataset",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 85,
    "Task Description": "identifying two similar\nnodes with given label names in lower level 1 and level 2",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 86,
    "Task Description": "Find a node with the maximal branching factor.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 86,
    "Task Description": "Find a subtree with at least 10 nodes and with its root located as low as possible.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 89,
    "Task Description": "Find a node having the maximum attribute value of the second layer",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 89,
    "Task Description": "Find a node having the maximum attribute value in the child node of node 1",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 89,
    "Task Description": "Find a node having the minimum attribute value in the child node of node 1",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 89,
    "Task Description": "Find a node having the maximum attribute value in the five leaf nodes of the fifth layer",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 89,
    "Task Description": "Find a node having the minimum attribute value in the five leaf nodes of the fifth layer",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 93,
    "Task Description": "The task given to the subjects was to search a tree hierarchy for a presented word.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 94,
    "Task Description": "Node search: Find node entitled “cannibalism”*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 94,
    "Task Description": "Navigate from previously visited nodes: From “cannibalism” to “field hospitals”*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 94,
    "Task Description": "Topology: How many steps would you have to make to get between node “labor affair organizations” and “field hospitals”?*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Path",
    "Target Attribute": "Length",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 95,
    "Task Description": "Find the collection Weimar in Thu¨ringen.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 95,
    "Task Description": "Find the collection Elections in north Rhine-Westphalia",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 95,
    "Task Description": "Which state has more entries on the topic of Transportation: Bavaria or Berlin?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 95,
    "Task Description": "How many documents are available on the topic of The Relationship of Brandenburg to Berlin?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 95,
    "Task Description": "Find a document about the Voting Out of the Red-Green Coalition in Hessen.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 95,
    "Task Description": "Find the collection Cologne in North Rhine-Westphalia.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 95,
    "Task Description": "Find the collection Elections in Thu¨ringen.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 95,
    "Task Description": "Which city has more entries: Essen in North Rhine-Westphalia or Bad Reichenhall in Bavaria?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 95,
    "Task Description": "How many documents are available on the topic of The Governments of Thu¨ringen?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 95,
    "Task Description": "Find a document about the Election of Sepp Niedermaier as Mayor of Bad To¨lz in Bavaria.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 107,
    "Task Description": "Identify the existence of a subtree within a larger tree.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "-",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 107,
    "Task Description": "Identify whether or not two highlighted nodes in a tree are connected using edge bundling.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestor/Descendant",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "Hierarchical Paths"
  },
  {
    "PaperId": 108,
    "Task Description": "Identify the largest directory in the hierarchy",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 108,
    "Task Description": "Identify the largest file in the libraries directory",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 108,
    "Task Description": "Identify the second largest directory in the hierarchy",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 108,
    "Task Description": "Identify the second largest file in the projects directory",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 108,
    "Task Description": "Identify the deepest subdirectory of the directory “/libraries/stereo_vision”",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 108,
    "Task Description": "Compare the directories “/projects/ravon/control/” and “/projects/ravon/navigator/”.\nWhich one is the larger one?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 108,
    "Task Description": "Compare the directories “/projects/ravon/obstacle_detection/” and “/projects/ravon/navigator/”. Which one has more files?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Compare",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Degree",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 108,
    "Task Description": "Which directory has the least amount of levels?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Explore",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Height",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 109,
    "Task Description": "Locate Node: The user was asked to locate 16 items: 8 (4 files – 4 folders) located in his/her personal folder hierarchy and 8 (4 files – 4 folders) in the hierarchy provided by the experimenters.",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 116,
    "Task Description": "What is the maximum depth of the hierarchy in the tree-maps representation given?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Height",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 116,
    "Task Description": "Is the tree balanced or unbalanced?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Balance",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 116,
    "Task Description": "How many files and folders are there in the root directory “Experiment”?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Tree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 116,
    "Task Description": "Find the name if the parent directory “innerWeb”",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Node",
    "Target Attribute": "Ancestors",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 116,
    "Task Description": "Which directories has the highest number of subdirectories?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 116,
    "Task Description": "How many files are there in the directory “innerTask”?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 116,
    "Task Description": "How many files are there in the directory “Temp”?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 116,
    "Task Description": "Which directories has the most files?",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Topology",
    "Specific Target": "Subtree",
    "Target Attribute": "Size",
    "Target Attribute Descriptor": "-",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 116,
    "Task Description": "Find the name of the largest file",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Locate",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 117,
    "Task Description": "Identify Node: Determination of creditors which charged the highest total amount of invoices in a given year*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 117,
    "Task Description": "Identify Node: Determination of the year in which the highest total amount of invoices was charged by a given creditor*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Categorical Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  },
  {
    "PaperId": 117,
    "Task Description": "Identify Node Value: Determination of the total amount of invoices which was charged in a given year by a given creditor and a navigation task*",
    "Complex": "-",
    "Analyze(Consume/Produce)": "Discover",
    "Action(Search)": "Lookup",
    "Action(Query)": "Identify",
    "Target": "Attribute",
    "Specific Target": "Node",
    "Target Attribute": "Quantitative Value",
    "Target Attribute Descriptor": "Extreme",
    "Special Task Marker": "-"
  }
]